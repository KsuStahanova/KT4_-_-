abstract class AbstractClass {
    public final void templateMethod() {
        step1();
        step2();
        step3();
        hook();
    }
    protected abstract void step1();
    protected abstract void step2();
    protected abstract void step3();

    protected void hook() {
    }
}


class ConcreteClass1 extends AbstractClass {
    @Override
    protected void step1() {
    }

    @Override
    protected void step2() {
    }

    @Override
    protected void step3() {
    }
}


class ConcreteClass2 extends AbstractClass {
    @Override
    protected void step1() {
    }

    @Override
    protected void step2() {
    }

    @Override
    protected void step3() {
    }

    @Override
    protected void hook() {
    }
}

public class TemplateMethodDemo {
    public static void main(String[] args) {
        AbstractClass concreteClass1 = new ConcreteClass1();
        concreteClass1.templateMethod(); 

        AbstractClass concreteClass2 = new ConcreteClass2();
        concreteClass2.templateMethod(); 
    }
}
}
